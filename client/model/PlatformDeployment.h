/**
 * Sensor Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.1-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * PlatformDeployment.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_PlatformDeployment_H_
#define IO_SWAGGER_CLIENT_MODEL_PlatformDeployment_H_


#include "../ModelBase.h"

#include "PlatformDeployment_validTime.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  PlatformDeployment
    : public ModelBase
{
public:
    PlatformDeployment();
    virtual ~PlatformDeployment();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PlatformDeployment members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();
    void setName(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<PlatformDeployment_validTime> getValidTime() const;
    bool validTimeIsSet() const;
    void unsetValidTime();
    void setValidTime(std::shared_ptr<PlatformDeployment_validTime> value);
    /// <summary>
    /// Id of static location
    /// </summary>
    utility::string_t getLocationid() const;
    bool locationidIsSet() const;
    void unsetLocationid();
    void setLocationid(utility::string_t value);
    /// <summary>
    /// Id of location stream tracking this platform
    /// </summary>
    utility::string_t getStreamid() const;
    bool streamidIsSet() const;
    void unsetStreamid();
    void setStreamid(utility::string_t value);

protected:
    utility::string_t m_Name;
    bool m_NameIsSet;
    std::shared_ptr<PlatformDeployment_validTime> m_ValidTime;
    bool m_ValidTimeIsSet;
    utility::string_t m_Locationid;
    bool m_LocationidIsSet;
    utility::string_t m_Streamid;
    bool m_StreamidIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_PlatformDeployment_H_ */
