/**
 * Sensor Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * GeoJSONPoint.h
 *
 * A GeoJSON &#39;Point&#39; describing the location&#39;s position.
 */

#ifndef GeoJSONPoint_H_
#define GeoJSONPoint_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// A GeoJSON &#39;Point&#39; describing the location&#39;s position.
/// </summary>
class  GeoJSONPoint
    : public ModelBase
{
public:
    GeoJSONPoint();
    virtual ~GeoJSONPoint();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GeoJSONPoint members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getType() const;
        void setType(utility::string_t value);
    /// <summary>
    /// The location&#39;s coordinates, in longitude/latitude/elevation order. Elevation is optional.
    /// </summary>
    std::vector<double>& getCoordinates();
        void setCoordinates(std::vector<double> value);

protected:
    utility::string_t m_Type;
        std::vector<double> m_Coordinates;
    };

}
}
}
}

#endif /* GeoJSONPoint_H_ */
